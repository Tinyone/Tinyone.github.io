<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲庭品趣</title>
  
  
  <link href="https://lovefamily-ren-wang.com/atom.xml" rel="self"/>
  
  <link href="https://lovefamily-ren-wang.com/"/>
  <updated>2023-07-02T09:44:11.261Z</updated>
  <id>https://lovefamily-ren-wang.com/</id>
  
  <author>
    <name>Dingchao Ren</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深度学习环境搭建</title>
    <link href="https://lovefamily-ren-wang.com/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://lovefamily-ren-wang.com/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2023-07-02T05:27:14.000Z</published>
    <updated>2023-07-02T09:44:11.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇博客主要是帮助读者搭建windows下深度学习的环境。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>windows下深度学习的环境搭建主要包括五个部分，分别是显卡驱动，cuda，cudnn，anaconda 和pytorch。</p><h1 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h1><p>想要搭建深度学习的环境，首先是需要一张显卡（虽然也可用CPU来做训练卡，但是CPU没有为深度学习做优化加速，训练性能远不如GPU）。一般来说Nvida显卡更加普及一些，所以就以Nvida显卡为例。如果电脑里已经安装了显卡驱动(一般都已经装好了)，可以进行第二步cuda安装。</p><p>如何确定是否有显卡驱动呢？非常简单，同事按下WI+X键，再按下M键，或者在电脑左下角搜索框输入设备管理器，打开设备管理器点击显示适配器，如下图所示<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%99%A8.png" alt="设备管理器"><br>图上显示的NVIDIA GeForce GTX 1660 Ti就是你的显卡，点击右键选择属性，再点击驱动程序一栏，如果可以打开，并显示了版本号，则说明显卡驱动已经安装完成，请移步第二步。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F.png"></p><p>如果打不开或者无法显示则需要安装显卡驱动。可以进入<a href="https://www.nvidia.cn/geforce/drivers/">NVIDA官网下载最新的驱动</a>，在下图中输入你的相关信息，然后开始搜索驱动，选择一个驱动版本进行下载并安装。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Nvida-driver.png"></p><h1 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h1><p>CUDA(Compute Unified Device Architecture)，是显卡厂商NVIDIA推出的运算平台。 CUDA是一种由NVIDIA推出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。CUDA给人工智能提供了很好的计算支持。</p><p>在下载cuda之前有一件事必须明确下来，否则后续的安装可能就不那么顺利了。驱动程序版本，CUDA版本，pytorch版本，python版本必须要相互适配。</p><p>首先CUDA要和驱动程序版本匹配，匹配表可以通过官方的CUDA Toolkit版本和显卡驱动对应的表格来查看，网址为：<a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#id5">https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#id5</a><br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/docs.nvidia.com_cuda_cuda-toolkit-release-notes_index.png"><br>驱动版本可通过右下角驱动信息来查看，右键点击Nvida图标，选择Nvida控制面板。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%A9%B1%E5%8A%A8%E4%BF%A1%E6%81%AF.png"><br>在控制面板中点击系统信息，就可以查看到驱动程序版本(需要记住)。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E6%8E%A7%E5%88%B6%E9%9D%A2%E6%9D%BF.png"></p><p>你的显卡驱动版本号必须大于等于表格中的版本号你才可以安装该版本的CUDA，我这里要安装的是CUDA 11.1 GA，而我的驱动号是457.49&gt;&#x3D;456.38，因此可以安装。</p><p>此时最好去确定11.1 版本所适配的的pytroch和Python版本了，提前确认一下以防对应版本没有（一般来说是有的）。pytorch版本和cuda版本适配可以在<a href="https://pytorch.org/">pytorch官网</a>查看。进入官网可以点击previous versions of pytorch 查看。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/pytorch.png"></p><p>点击previous versions of pytorch，搜索CUDA 11.1 查看对应的所有可支持的版本。需要注意的是，这里有conda和wheel两种安装方式，笔者这里选择的是pytroch1.8.0的conda安装方式，如下图所示。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/torch1.8.0-conda11.1.png"></p><p>最后就是确定一下pytorch1.8.0所需要的python版本，这可以在网上搜一下。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/torch-python.png"><br>可以看出可选的python版本为3.8和3.9，那么至此版本都选定了。</p><table><thead><tr><th align="center"></th><th align="center">版本</th></tr></thead><tbody><tr><td align="center">驱动</td><td align="center">457.49</td></tr><tr><td align="center">Cuda toolkit</td><td align="center">11.1 GA</td></tr><tr><td align="center">pytorch</td><td align="center">1.8.0</td></tr><tr><td align="center">python</td><td align="center">3.9</td></tr></tbody></table><p>下面可以依次下载。进入CUDA下载界面<a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive</a> 选择cuda11.1</p><p><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cuda11.1.png"><br>然后进入以下界面，选择windows，x86平台，版本10，和local安装，点击右下角下载。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cudadownload.png"></p><p>下载完成可以进行安装，可精简安装，也可以自定义安装，需要记住安装地址，安装完成后，打开系统环境变量，发现多了两个变量，CUDA_PATH和CUDA_PATH_V11_1。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cuda-path.png"></p><p>打开cmd，输入nvcc -V，查看安装的cuda版本。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/nvcc-V.png"></p><h1 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h1><p>进入<a href="https://developer.nvidia.com/zh-cn/cudnn"></a>，选择cuda11.1 对应的cuDNN版本进行下载，其实是一个压缩包，解压缩之后将lib，include，lib三个文件夹，复制到cuda文件夹下v11.1文件中<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cuDNN.png"><br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/v11.1.png"><br>至此cuDNN安装完成</p><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><p>Anaconda是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。因为包含了大量的科学包，Anaconda 的下载文件比较大（约 531 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用Miniconda这个较小的发行版（仅包含conda和 Python）。</p><p>进入<a href="https://www.anaconda.com/download">anaconda下载界面</a>。下载完成后，进行安装，建议安装至非c盘，因为后续环境会下载很多安装包，这里要注意。安装过程中，add anaconda3 to my path environment variable 这个勾选的话，就可以直接在cmd用conda命令，但可能会影响其他软件；不勾选的话，可以在开始菜单中打开Anaconda Navigator或Anaconda Prompt，然后在里面用conda等命令。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/anaconda.png"></p><p>然后打开annconda。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/anaconda-prompt.png"><br>这是一个和命令行很像的东西。<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/anaconda-cmd.png"><br>Conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。</p><p>环境就像是一个工具仓库，当我们做一个项目时会用到很多python的软件包，做另外一个项目时会用到其他的软件包或者是不同版本的软件包，如果把所有软件包都安装在主环境下的话，包与包之间可能会冲突，就好像汽油和火把不能放在同一个仓库里。而这里的base指的是主环境，也就是主仓库，这里我们新建一个虚拟环境，分仓库，用来存放搭建深度学习的所需要的环境。指令为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n torch18_py39 python=3.9</span><br></pre></td></tr></table></figure><p>其中torch18_py39是环境名，python&#x3D;3.9是之前我们选择的python版本。接下来会提供一些基础的软件包，输入y确认安装。然后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate torch18_py39</span><br></pre></td></tr></table></figure><p>就进入到了我们新创建的虚拟环境<br><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/torch18_py39.png"></p><p>可以看到前面base已经变成torch18_py39了，这样我们就从主环境切换到了新的环境了。</p><p>至此，anaconda也完成安装了。</p><h1 id="pytroch"><a href="#pytroch" class="headerlink" title="pytroch"></a>pytroch</h1><p>终于来到最后一步，pytroch安装。在cuda安装的那一节里，我们已经选了pytroch 1.8.0版本。</p><p>首先打开anaconda prompt，进入上一节创建好的torch18_py39虚拟环境。<a href="https://pytorch.org/get-started/previous-versions/">进入pytroch网站</a>，选好版本(pytorch 1.8.0) 复制下面的指令到anaconda的命令行中，回车确认。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch==1.8.0 torchvision==0.9.0 torchaudio==0.8.0 cudatoolkit=11.1 -c pytorch -c conda-forge</span><br></pre></td></tr></table></figure><p><img src="/2023/07/02/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/torch1.8.0-conda11.1-download.png"></p><p>有一些小伙伴可能会读取失败或者在安装过程中卡在某个地方不动了，这是因为anaconda是国外源，我们可以将anaconda的channel切换到清华源或者其他的一些国内源。具体的切换方法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在anaconda 命令行中分别输入以下命令</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line"> conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/</span><br><span class="line"> conda config --set show_channel_urls yes </span><br></pre></td></tr></table></figure><p> 然后再下载，下载过程出现的问题可以自行百度。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p> 这篇安装教程是主要参考这篇文章所写<a href="https://zhuanlan.zhihu.com/p/443147240">Windows环境下pytorch深度学习环境搭建</a>，并增加了一点细节。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本篇博客主要是帮助读者搭建windows下深度学习的环境。&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="环境搭建" scheme="https://lovefamily-ren-wang.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="CUDA" scheme="https://lovefamily-ren-wang.com/tags/CUDA/"/>
    
  </entry>
  
  <entry>
    <title>深度学习-深度前馈网络</title>
    <link href="https://lovefamily-ren-wang.com/2023/07/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E6%B7%B1%E5%BA%A6%E5%89%8D%E9%A6%88%E7%BD%91%E7%BB%9C/"/>
    <id>https://lovefamily-ren-wang.com/2023/07/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E6%B7%B1%E5%BA%A6%E5%89%8D%E9%A6%88%E7%BD%91%E7%BB%9C/</id>
    <published>2023-07-01T06:30:25.000Z</published>
    <updated>2023-07-02T05:28:17.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>随着alpha-go和Chatgpt的出现，人工智能（Artificial Intelligence，AI）展现出令人惊叹的发展前景，作为一个科技工作者（新时代民工），应该对其要有所了解的。深度学习作为人工智能领域一个非常重要的课题，自然是不能错过的。</p><p>笔者之前也对深度学习了解较少，但工作上遇到了一些问题，发现用深度学习的一些方法可以很好的解决，所以想工作之余系统性的学习一下。<a href="https://www.deeplearningbook.org/">《Deep Learning》，I. Goodfellow, Y. Bengio and A. Courville</a>作为深度学习领域非常著名的一本书，虽然已经有些过时，但确实打基础的一本好书。笔者会从中挑选一些章节阅读并分享。</p><h1 id="深度前馈网络"><a href="#深度前馈网络" class="headerlink" title="深度前馈网络"></a>深度前馈网络</h1><p>绝大多数深度学习问题都可以总结为，给定一个输入 $x$，我们设计网络可以输出预期的 $y$。也就是说，我们期望可以学习到这个未知的映射 $f^*:x \rightarrow y&#x3D;f^*(x)$。深度前馈网络（deep feedforward network），也叫作前馈神经网络（feedforward neural network）或者多层感知机（multilayer perceptron, MLP），是典型的深度学习中近似映射的方法。前馈网络定义了一个映射 $y&#x3D;f(x,\theta)$，其中$\theta$为网络参数。</p><p>这里需要提一下，之所以称为前馈网络，是因为信息流从输入经过中间计算过程再到输出端，在模型的输出和模型本身之间没有反馈连接，当前馈神经网络被扩展成包含反馈连接时，它们被称为循环神经网络（recurrent neural network, RNN）。</p><p><img src="/2023/07/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E6%B7%B1%E5%BA%A6%E5%89%8D%E9%A6%88%E7%BD%91%E7%BB%9C/feedforward_NN.png" alt="前馈网络"></p><p>前馈网络的结果如上图所示。主要是由输出神经元，隐藏神经元，输出神经元。神经元之间的连线代表了信息传递的权重，每个隐藏神经元包含一个激活函数。显然神经网络隐藏层越多，深度越深，每个隐藏层的隐藏神经元越多，则宽度越大。</p><p>说完了基本的结构，其实对于深度前馈网络已经有个大概的了解了，但是对于深度学习这门课，动手实验要比看理论要更能学到东西，特别是调参的经验（也就是大家所调侃的炼丹经验）。</p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;随着alpha-go和Chatgpt的出现，人工智能（Artificial Intelligence，AI）展现出令人惊叹的发展前景，作为一</summary>
      
    
    
    
    <category term="深度学习" scheme="https://lovefamily-ren-wang.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="MLP" scheme="https://lovefamily-ren-wang.com/tags/MLP/"/>
    
  </entry>
  
</feed>
